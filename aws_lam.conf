#############################################################
#              Copyright (c) Moogsoft Inc 2017              #
#                                                           #
#-----------------------------------------------------------#
#                                                           #
# The contents of this configuration file may be copied,    #
# amended and used to create derivative works.              #
#                                                           #
#############################################################

#------------------------------------------------------------
# Essential configuration for the AWS LAM
#------------------------------------------------------------
{
    config :
    {
        #----------------------------------------
        # Define the object to be monitored
        #----------------------------------------
        monitor:
        {
            #
            # The name of the LAM.
            #
            name                    : "AWS Monitor",
            
            #
            # The monitor class in use.
            #
            class                   : "CAwsMonitor",
            
            #           
            # Role ARN of the delegated role. If Credentials (access_key_id and
            # secret_access_key) are provided, it will be assumed that it 
            # belongs to a user from the account that has been trusted with Role
            # delgation. If no Credentials are provided then SDK falls back to
            # Environment variables, SDK or Instance role etc for them. 
            #   
            role_arn                     : "$MOOGARN",

            #           
            # Time duration (seconds) for which temporary credentials from
            # Assume role remains valid for sending request to AWS.
            #   
            role_session_validity        : 3600,

            #           
            # Credentials for AWS
            #
            access_key_id                : "",
            #encrypted_access_key_id     : "",            
            secret_access_key            : "",
            #encrypted_secret_access_key : "",
            
            #
            # Set proxy to false, if proxy not required.
            #
            enable_proxy                  : false,
            
            #
            # If proxy set to true then only set host, port
            # userid, password.
            #
            proxy_host                  : "localhost",
            proxy_port                  : 8080,
            proxy_userid                : "userid",
            proxy_password              : "password",
            #encrypted_proxy_password   : "",
            
            
            filter:
            {
                    #
                    # The alarms filter is used to filter the alarms received from AWS Cloudwatch per region basis.
                    # The alarm_name_prefix, filters the alarm based on the prefix in the alarm name
                    # e.g. if "test" is entered, then all the alarms having the text "test" in the 
                    # starting of their name will be filtered and sent to Moogsoft.
                    # In alarms_to_monitor the alarm name is given in this field e.g. "alarm1".
                    # It only sends the alarms with the alarm name entered here to Moogsoft.
                    # Multiple alarm name can be specified separated by comma e.g "alarm1","alarm2".
                    # At a time either the alarm_name_prefix or the alarms_to_monitor filter can be used.
                    # If aws_all_regions is enabled then:
                    #   - alarms from all regions are fetched.
                    #   - filter specified under aws_all_regions is applied to all AWS regions for which a separate filter has not been configured.
                    # Example: if a filter has been configured for region "us-west-2" then alarms with the filter configuration for "us-west-2" will be fetched.
                    # Other regions will follow the filter pattern specified in aws_all_regions
                    #
                    alarms:
                    {
                       "aws_all_regions":
                        {
                             #alarm_name_prefix            : "",
                             alarms_to_monitor             : []
                        }
                    #  "us-west-2":
                    #   {
                    #        #alarm_name_prefix            : "",
                    #        alarms_to_monitor             : []
                    #   },
                    #  "ap-south-1":
                    #   {
                    #        #alarm_name_prefix            : "",
                    #        alarms_to_monitor             : []
                    #   }
                    },
                    
                    #
                    # Events are filtered using the filter_pattern and log_group_to_monitor fields. 
                    # The events logged in the log group given in the log_group_to_monitor field 
                    # having the pattern entered in the filter_pattern field are only forwarded to 
                    # Moogsoft. For example, if log group /aws/lambda/SomethingHappened has events
                    # with a word "scheduled" in it , so to filter the events, "scheduled" should be entered in
                    # the filter_pattern field and  "/aws/lambda/SomethingHappened" should be entered
                    # in the log_group_to_monitor field. 
                    # The LAM retrieves events from configured regions only.
                    # To retrieves events from a region, provide the region name and the required values
                    # within the curly braces. 
                    # You may enable event collection for all regions by enabling aws_all_regions (disabled by default). 
                    # NOTE: Event collection from all regions may be a cost and resource intensive operation.
                    # If aws_all_regions is enabled then:
                    #   - events from all regions are fetched.
                    #   - filter specified under aws_all_regions is applied to all AWS regions for which a separate filter has not been configured.
                    # Example: if a filter has been configured for region "us-west-2" then events with the filter configuration for "us-west-2" will be fetched.
                    # Other regions will follow the filter pattern specified in aws_all_regions
                    #
                    events:
                    {
                    #  "aws_all_regions":
                    #   {
                    #        #filter_pattern              : "",
                    #        log_group_to_monitor         : []
                    #   },
                    #  "us-west-2":
                    #   {
                    #        #filter_pattern               :"",
                    #        log_group_to_monitor         :[]
                    #   },
                    #  "ap-south-1":
                    #   {
                    #        #filter_pattern               :"",
                    #        log_group_to_monitor         :[]
                    #   }
                    }
            },
            
           #How long to wait between requests (in seconds)
           #The default is '60' if not specified.  If specified value is less than 1, then it will switch to default.
           #
           polling_interval : 60,
            
           # The number of attempts to re-connect with AWS server in case of failure, used in conjunction
           # with retry_interval configuration.
           # The default is '10' if not specified. If specified value is less than 1, then it will switch to default.
           #
           max_retries : 10, 
                    
           #
           # The time to wait in seconds between each re-connect attempt.
           #
           # The default is '60' seconds if not specified. If specified value is less than 1, then it will switch to default.
           #
           retry_interval : 60,
           
           #
           # The timeout value in seconds, if not specified defaults to 120 seconds.
           # This value will be used to timeout a connection, socket and request
           #
           timeout: 120                     
           },
        #
        # Uncomment to change the ha definitions
        #
        # ha:
        # {
        #     group: "aws_lam",
        #     instance: "instance_name",
        #     duplicate_source: false
        # },
        #----------------------------------------
        # LAM identification
        #----------------------------------------
        agent:
        {
                #---------------------------------------------
                # The agent name that will appear as
                # $LamInstanceName in the mapping rules below
                #---------------------------------------------
                name    : "AWS Cloudwatch"
                #,log    : "$MOOGSOFT_HOME/log/data-capture/aws_lam.log"
        },
        
        constants:
        {
            severity:
            {
                "CLEAR"         : 0,
                "INDETERMINATE" : 1,
                "WARNING"       : 2,
                "MINOR"         : 3,
                "MAJOR"         : 4,
                "CRITICAL"      : 5
            }
        },
        conversions:
        {
            stringToInt:
            {
                input:      "STRING",
                output:     "INTEGER"
            }
         
        },
        #---------------------------------------------
        # Describe how parsed parameters get mapped
        # to alert fields
        #---------------------------------------------
        mapping :
        {
            #
            # All unused variables live as a JSON object
            # referenced by this variable (if defined)
            #
            # Input is restricted to Json so the builtInMapper option is not
            # used for this LAM
            #
            catchAll: "overflow",
            rules:

            [
                { name: "signature", rule:      "" },
                { name: "source_id", rule:      "" },
                { name: "external_id", rule:    "" },
                { name: "manager", rule:        "AWS Cloudwatch" },
                { name: "source", rule:         "" },
                { name: "class", rule:          "$class" },
                { name: "agent", rule:          "$LamInstanceName" },
                { name: "agent_location", rule: "" },
                { name: "type", rule:           "" },
                { name: "severity", rule:       "1", conversion: "stringToInt" },
                { name: "description", rule:    "" },
                { name: "agent_time", rule:     "" }
            ]

        },
        filter:
        {
            presend: "AwsLam.js",
            modules: ["CommonUtils.js"]
        }
    }
}
