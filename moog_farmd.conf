#############################################################
#              Copyright (c) Moogsoft Inc 2015              #
#                                                           #
#-----------------------------------------------------------#
#                                                           #
# The contents of this configuration file may be copied,    #
# amended and used to create derivative works.              #
#                                                           #
#############################################################

#
# Configuration for the moog_farmd app
#
{
    config :
    {
        # How many moolet threads - and moobots
        threads : 10,

        # Optimization level to use for moobots
        #   -1    => moobots will be interpreted
        #   0 - 9 => moobots will be precompiled
        #     0 => minimal opimization
        #     9 => maximum opimization
        # For more detail see: https://developer.mozilla.org/en/docs/Rhino/Optimization
        moobot_optimization : 0,

        # Set the maximum number of concurrent asynchronous REST tasks
        # Increasing the number will allow more asynchronous requests to run at
        # the same time. The default should be appropriate in the majority of
        # circumstances.  Higher values will consume more system resources.
        # Excessively high values (e.g. 1,500) may require more resources than
        # are available on the host.
        maximum_rest_requests:  200,

        # Expanded sig_resolution section containing merge_groups configuration.
        sig_resolution :
        {
            # The default section is mandatory and must contain both
            # "alert_threshold" and "sig_similarity_limit" values. Any moolet
            # not defined as a member of a merge group will belong to the
            # default group.
            default:
            {
                alert_threshold      : 1,
                sig_similarity_limit : 0.7
            },
            # The merge groups section is optional. Each defined group must
            # contain a "name" and a list of included "moolets" which must be
            # the names of sigalising moolets defined in this config file. The
            # merge group may also contain either or both of the
            # "alert_threshold" and "sig_similarity_limit" values. If these
            # values are not defined the value from the default group will be
            # used.
            #
            # A moolet defined in two merge groups will only belong to the first
            # one built.
            #
            # e.g.
            #
            # merge_groups:
            # [
            #    {
            #        name: "Thomas",
            #        moolets: ["Nexus", "Sigaliser"],
            #        alert_threshold      : 3,
            #        sig_similarity_limit : 0.65
            #    },
            #    {
            #        name: "Gordon",
            #        moolets: ["Speedbird"]
            #    }
            # ]
            #
            # Sample configuration for ITNM Route Cause & Symptom 
            # Detection Cookbook
            #
            # merge_groups:
            # [
            #    {
            #        name: "ITNM Route Causes & Symptoms",
            #        moolets: ["ITNM"],
            #        alert_threshold : 2,
            #        sig_similarity_limit : 0.7
            #    }
            # ],

            #
            # Length of time in seconds to keep unchanged closed/superseded
            # situations in memory.
            #
            # If not specified the situations will never be purged from memory.
            #
            # 86400s = 1 day.
            # The minimum value is 60s.
            #
            retention_period : 86400
        },
        
        # modules section contain topological configurations        
        #modules : [
        #			{
        #				name						: "CGraphTopoModule",
        				
        
        #	 			PARAMETERS TO TRIGGER TOPOLOGY RE-CALCULATION ON-THE-FLY 
        #		 		Note that both configurations are used, a re-calculation will 
        #	 			be triggered whichever is hit (i.e. greater or equal than the 
        #	 			threshold value) first.
        #				
        #	 			percentage of newly added edges threshold. 
        #		 		Note that if the percentage is 20%, the value should be 20 
        #				recalc_threshold_percentage	: 10,
        				
        #				number of new edges threshold
        #				recalc_threshold_quantity	: 100,
        				
        #				Maximum size the topo cache will use in megabytes
        #				If the average length of a node name is 20 characters, 
        #				10mb will store approx. 35,000 distance calculations
        #				module_cache_size			: 10
        #			},
        #			{
        #				name					: "CTopoModule",
        #				
        #	 			PARAMETERS TO TRIGGER TOPOLOGY RE-CALCULATION ON-THE-FLY
        #	 			Note that both configurations are used, a re-calculation will 
        #	 			be triggered whichever is hit (i.e. greater or equal than the  
        #	 			threshold value) first.
        				
        #	 			percentage of newly added nodes threshold, we use nodes as we 
        #	 			do not keep record of edges in the classic topology  
        #	 			Note that if the percentage is 20%, the value should be 20
        #				recalc_threshold_percentage	: 10,
        				
        #	 			number of new edges threshold
        #				recalc_threshold_quantity	: 100
        #			}				
        #],
        
        duplicate_event_source:  {
            #
            # Number of events to keep in the duplicate events
            # buffer. Default is 120,000.
            #
            events_buffer_size: 120000,
            #
            # An event hash from different sources is considered
            # duplicate when it is received within the below
            # time_window. The time_window is calculated as the
            # delta between the first received event hash and the
            # next subsequent event with the same hash. 
            # Once the time_window has expired it is reset with
            # the latest source lam taking ownership.
            #
            # The granularity of this configuration is in seconds.
            # If not specified, the default value of 20 is used.
            time_window: 20
        },

        moolets : [
                    {
                        name            : "AlertBuilder",
                        classname       : "CAlertBuilder",
                        run_on_startup  : true,
                        persist_state   : false,
                        moobot          : "AlertBuilder.js",
                        # Configuration for Netcool LAM
                        # moobot          : "AlertBuilderNetcool.js",

                        #
                        # metric_path_moolet - a moolet included in the
                        # calculation of the time taken for events to complete
                        # their path through Moogsoft AIOps from initial ingestion
                        # through to complete processing.
                        #
                        metric_path_moolet : true,

                        #
                        # Here you specify a list of streams to
                        # create alerts for, this should reference the streams
                        # set in the LAMs. Ommission causes the builder to build
                        # from generic event stream
                        #event_streams   : [ "AppA" ],
                        threads         : 4,

                        #
                        # PARAMETERS TO USE EVENTS ANALYSER PRIMING
                        #

                        #
                        # events_analyser_config:
                        #   Allows configurations for tokeniser rules to be
                        #   specified on a moolet-by-moolet basis.  If no config
                        #   is specified, the system default is used
                        #
                        events_analyser_config  : "events_analyser.conf",

                        #
                        # IMPORTANT: 'properties_from_db' is always 'true' when
                        #            the 'entropy_calc' property is set to 'EntropyV2'
                        #            in events_analyser.conf.
                        #            'properties_from_db' is only configurable when
                        #            'EntropyClassic' is used.
                        #
                        # properties_from_db:
                        #   NOTE: This is only configurable in 'EntropyClassic' mode
                        #   Should the properties for an alert be retrieved
                        #   from the database or calculated on the fly?
                        #     true => Primed alert data is taken from DB
                        #     false => Alert entropy is calculated for each
                        #              event as it arrives and in isolation.
                        #              and is not influenced by the tokens
                        #              found in other events for this alert
                        #              Using this option may have a detrimental
                        #              impact on performance
                        # properties_from_db  : true,

                        # IMPORTANT: 'update_properties_in_db' is always 'true' when
                        #            the 'entropy_calc' property is set to 'EntropyV2'
                        #            in events_analyser.conf.
                        #            'update_properties_in_db' is only configurable when
                        #            'EntropyClassic' is used.
                        #
                        # update_properties_in_db:
                        #   NOTE: This is only configurable in 'EntropyClassic' mode
                        #   Should properties of any unprimed alerts be written
                        #   back to the DB and hence available for its next
                        #   occurrence?
                        #
                        # Warning: for efficiency reasons it makes no sense to
                        #          configure the system as:
                        #  properties_from_db = false
                        #  update_properties_in_db = true
                        #
                        # update_properties_in_db   : true,

                        #
                        # If moog has been configured/primed to process multiple
                        # named event streams these named streams are specified
                        # here.
                        #
                        # priming_stream_name:
                        #  Use this specific name, this is used primarily to
                        #  access different datasets from the reference DB
                        #
                        priming_stream_name         : null,

                        #
                        # priming_stream_from_topic:
                        #  true     : Extract stream name from the MooMS topic
                        #  false    : Use the stream name from the
                        #             priming_stream_name option above
                        #
                        #  Even if the inbound data comes from multiple streams
                        #  a value of 'false' is still a valid configuration,
                        #  specifically if the inbound event streams use the
                        #  same priming data.
                        #
                        priming_stream_from_topic   : false
                    }
                    ,
                    {
                        name            : "MaintenanceWindowManager",
                        classname       : "CMaintenance",
                        run_on_startup  : true,
                        persist_state   : false,
                        metric_path_moolet : true,
                        process_output_of : "AlertBuilder",
                        maintenance_status_field : "maintenance_status",
                        maintenance_status_label : "In maintenance",
                        update_captured_alerts : true
                    }
                    ,
                    {
                        # When enabling Enricher moolet, maintenance window manager should be configured to take the Enricher in its process_output_of
                        name              : "Enricher",
                        classname         : "com.moogsoft.farmd.moolet.enricher.CEnricherMgr",
                        run_on_startup    : false,
                        persist_state     : false,
                        metric_path_moolet  : true,
                        process_output_of   : "AlertBuilder",
                        description       : "Alert Enrichment"
                    }
                    ,
                    {
                        name            : "AlertRulesEngine",
                        classname       : "CAlertRulesEngine",
                        run_on_startup  : false,
                        persist_state   : false,
                        metric_path_moolet : true,
                        moobot          : "AlertRulesEngine.js",
                        # Configuration for Netcool LAM
                        # moobot          : "AlertRulesEngineNetcool.js",

                        #mooms_event_handler  : true
                        process_output_of : "MaintenanceWindowManager"
                    }
                    ,
                    #
                    #                        _____                              
                    #                       |_   _|__ _ __ ___  _ __  _   _ ___ 
                    #                         | |/ _ \ '_ ` _ \| '_ \| | | / __|
                    #                         | |  __/ | | | | | |_) | |_| \__ \
                    #                         |_|\___|_| |_| |_| .__/ \__,_|___/
                    #                                          |_|              
                    #
                    #                                       _             
                    #                                __ _  | | __  __ _   
                    #                               / _` | | |/ / / _` |  
                    #                              | (_| |_|   < | (_| |_ 
                    #                               \__,_(_)_|\_(_)__,_(_)
                    #                              
                    #  ____  _             _ _                  ____ _               _              ____
                    # / ___|(_) __ _  __ _| (_)___  ___ _ __   / ___| | __ _ ___ ___(_) ___  __   _|___ \
                    # \___ \| |/ _` |/ _` | | / __|/ _ \ '__| | |   | |/ _` / __/ __| |/ __| \ \ / / __) |
                    #  ___) | | (_| | (_| | | \__ \  __/ |    | |___| | (_| \__ \__ \ | (__   \ V / / __/
                    # |____/|_|\__, |\__,_|_|_|___/\___|_|     \____|_|\__,_|___/___/_|\___|   \_/ |_____|
                    #          |___/                                                                      
                    #
                    #
                    {
                      # Moolet
                      name              : "Tempus",
                      classname         : "com.moogsoft.farmd.moolet.tempus.CTempus",
                      run_on_startup    : false,
                      persist_state     : false,
                      metric_path_moolet   : true,
                      process_output_of : "AlertBuilder",
                      description       : "A Tempus (a.k.a. Sigaliser V2) Situation",

                      # For deprecation
                      time_compression  : false,  # Recommended value = FALSE, DO NOT CHANGE
                      sig_on_bucket     : false,
                      max_backlog       : 100000000,

                      # Algorithm
                      entropy_threshold : 0.0,

                      # Triggers
                      sig_interval      : 120,    # seconds => sigalise every 2 minutes

                      # Sigalising Window
                      window_size       : 1200,   # seconds => 20 minutes
                      bucket_size       : 5,      # seconds : Take Care if changing - Tempus is designed to use small bucket sizes
                      arrival_spread    : 15,     # seconds : acceptbale latency/arrival window for each event

                      # Sigalising method using community detection algorithms. Valid options include:
                      #  "Louvain" - Default algorithm. In most environments this should not be changed.
                      #  "LouvainMulti" - Slight variation to Louvain that gives higher modularity but takes more time to calculate.
                      #  "SmartLocal" - An advanced variation that gives highest modularity but takes the most time to calculate.
                      detection_algorithm : "Louvain",

                      # hidden config
                      #random_starts       : 5,
                      #max_iterations      : 10,

                      # Include edge weights in clustering algo or not?
                      edge_weight       : false,

                      # How similar must alerts be to be considered for clustering?
                      #min_arrival_similarity : 0.6667,

                      # Minimum alerts needed for a situation to be created. Must be at least 2.
                      alert_threshold : 4,

                      pre_partition     : null,
                      partition_by      : null,

                      # Significance Test Algorithm - generates a significance score for situations,
                      # valid options:
                      #   "Poisson1" - The more lenient test. Likely to detect all significant situations
                      #                but higher risk of creating insignificant situations.
                      #   "Poisson2" - The thorough test. Likely to exclude all insignificant situations
                      #                but higher risk of excluding significant situations.
                      significance_test       : "Poisson1"


                      # Max significance score for a situation to be created (those with scores
                      # 0-significance_threshold are created). Valid threshold range = [0-100].
                      # significance_threshold  : 1
                    }
                    ,
                    {
                        # Moolet
                        name              : "Sigaliser",
                        classname         : "CSigaliser",
                        run_on_startup    : false,
                        persist_state     : false,
                        metric_path_moolet   : true,
                        #process_output_of : "AlertRulesEngine",
                        process_output_of : "MaintenanceWindowManager",
                        description       : "Sigaliser situation",

                        # Algorithm
                        time_compression  : false,
                        membership_limit  : 3,
                        sig_alert_horizon    : 0.5,
                        scale_by_severity : false,
                        entropy_threshold : 0.0,

                        # Triggers
                        sig_on_bucket     : false,
                        sig_interval      : 120,
                        max_backlog       : 1000000,

                        # Time Buckets
                        resolution        : 120,
                        window            : 90,

                        #
                        # Pre-partitioning partitions the events into seperate streams BEFORE clustering
                        # based upon the value of the selected component. Sigs generated with partitioning
                        # will each contain a single value for the component.
                        #
                        # Multiple values can be provided in a list in a custom_info field. To make multiple 
                        # pre-partitions using value in the list individually, set "treat_as : list",
                        # e.g. pre_partition   : { name: "custom_info.list_field_name", treat_as: "list" }
                        # The pre_partition value will be treated as a string if not specified.
                        #
                        pre_partition   : null,
                        #
                        # We can choose a single attribute as a singleton component, which splits
                        # the discovered sigs so that they only ever contain events with a unique value
                        # of the supplied attribute. In that way we force partition the situations by
                        # that component.
                        #
                        # NOTE: this differs from pre-partitioning in that the clusters are generated from
                        # the whole data set and only then partitioned based upon the selected component.
                        # This configuration parameter will generally result in a different set of Sigs being
                        # generated than would be produced using pre-partitioning. It is possible to configure
                        # both pre_partition and partition_by at the same time. The partition_by parameter will
                        # only have any effect if it is applied to a different component.
                        #
                        partition_by   : null
                    }
                    ,
                    {
                        # Moolet
                        name                : "Cookbook",
                        classname           : "CCookbook",
                        run_on_startup      : false,
                        persist_state       : false,
                        metric_path_moolet     : true,
                        moobot              : "Cookbook.js",
                        process_output_of   : "MaintenanceWindowManager",

                        # Algorithm
                        membership_limit  : 1,
                        scale_by_severity : false,
                        entropy_threshold : 0.0,

                        # Setting single_recipe_matching to true causes the
                        # cookbook to treat the recipes as being in an order of
                        # priority, based on the order of configuration in this
                        # file, highest priority first.
                        #
                        # Individual alerts may only:
                        #
                        # a) appear in a single situation generated by a
                        # particular recipe, and
                        # b) subsequently may only appear in a situation
                        # generated by a higher priority recipe.
                        #
                        # An alert is treated as being a new alert after it has
                        # been closed (and reappeared) and is once again
                        # available for inclusion in situations generated by any
                        # recipe.
                        single_recipe_matching : false,

                        #
                        # How to match clusters?
                        #   first_match - add alert to first cluster over similarity threshold value.
                        #                 This is the default behaviour for the cookbook.
                        #   closest_match - add alert to the cluster with the highest similarity (which must
                        #                   be greater than the similarity threshold value). This option may
                        #                   be less performant since it will have to compare alerts against
                        #                   each cluster in a recipe.
                        # (This will be overwritten by the definition in the recipes)
                        #
                        # cluster_match_type  : "first_match",

                        recipes :[
                                {
                                    chef                : "CValueRecipeV2",
                                    name                : "SplitBySourceAndDescription",
                                    description         : "Value Recipe outage",
                                    recipe_alert_threshold : 0,
                                    exclusion           : "severity < 5",
                                    trigger             : null,
                                    # seed_alert is a filter to determine whether to start a situation. Note if an alert's
                                    # trigger condition is satisfied but seed_alert is not satisfied, no new situation will
                                    # be created.
                                    seed_alert          : null,
                                    rate                : 0,   # Given in events per minute
                                    # Minimum events to use for trailing rate
                                    # calc. NOTE - no events will be added to a
                                    # cluster until at least this number of
                                    # events is availble to rate.
                                    min_sample_size     : 5,

                                    # Maximum number of events to use for
                                    # trailing rate calc.
                                    max_sample_size     : 10,

                                    # length of time (in seconds) to remember a cluster before
                                    # a recipe forgets its existence and starts again.
                                    # specific cook_for values can be specified at the recipe
                                    # level, this is optional because recipes inherit the
                                    # cookbook's cook_for value.
                                    # cook_for           : 5000,

                                    #
                                    # How to match clusters?
                                    #   first_match - add alert to first cluster over similarity threshold value.
                                    #                 This is the default behaviour for the cookbook.
                                    #   closest_match - add alert to the cluster with the highest similarity (which must
                                    #                   be greater than the similarity threshold value). This option may
                                    #                   be less performant since it will have to compare alerts against
                                    #                   each cluster in a recipe.
                                    # (This will overwrite the definition in the cookbook)
                                    #
                                    cluster_match_type  : "first_match",

                                    # similarity between component values
                                    # Multiple values can be provided in a list in a custom_info field. To make Cookbook
                                    # match each value in the list individually, set "treat_as : list" in the component configuration,
                                    # e.g. components: [ { name: "custom_info.source_id", similarity: 1.0, treat_as: "list" } ]
                                    # The component value will be treated as a string if this configuration is not used.
                                    matcher : {
                                        # How many hops away to be considered a match, 
                                        # beyond which no cluster will be formed
                                        # hop_limit: 2,

                                        # Shingle size determines the groups of consecutive letters
                                        # extracted from strings and is used in the similarity calculation.
                                        # For example, sources "webserver0001" and "webserver002" and
                                        # shingle_size 3 extracts the following shingles:
                                        # "webserver0001": web ebs bse ser erv rve ver er0 r00 000 001
                                        # "webserver0002": web ebs bse ser erv rve ver er0 r00 000 002
                                        # 11 shingles are extracted for each source, 10 of which are the
                                        # same, indicating high similarity.
                                        # If shingle_size <= 0 words are used instead of shingles, for example:
                                        # "webserver0001": webserver0001
                                        # "webserver0002": webserver0002
                                        # The 2 words are different, indicating low similarity.
                                        components: [
                                            { name: "source_id",   similarity: 0.75, shingle_size:  4 },
                                            { name: "description", similarity: 0.75, shingle_size: -1 }
                                        ]
                                    }
                                },
                                # {
                                #     # The first iteration of the Value Recipe used a simpler and less 
                                #     # precise version of matching - ladder compare.

                                #     chef                : "CValueRecipe",
                                #     name                : "SplitBySourceAndDescription",
                                #     description         : "Value Recipe outage",
                                #     recipe_alert_threshold : 0,
                                #     exclusion           : "severity < 5",
                                #     trigger             : null,
                                #     seed_alert          : null,
                                #     rate                : 0,   # Given in events per minute
                                #     min_sample_size     : 5,
                                #     max_sample_size     : 10,
                                #     cluster_match_type  : "first_match",

                                #     matcher : {
                                #         components: [
                                #             { name: "source_id",   similarity: 1.0, case_sensitive: true }, 
                                #             { name: "description", similarity: 0.5, case_sensitive: true }
                                #         ]
                                #     }
                                # },
                                {
                                    chef                : "CBotRecipe",
                                    name                : "MaxwellDaemon",
                                    description         : "Maxwell Recipe outage",
                                    recipe_alert_threshold : 0,
                                    trigger             : null,
                                    exclusion           : "severity < 3",
                                    rate                : 1,    # Given in events per minute
                                    min_sample_size     : 5,
                                    max_sample_size     : 10,

                                    #
                                    # How to match clusters?
                                    #   first_match - add alert to first cluster over similarity threshold value.
                                    #                 This is the default behaviour for the cookbook.
                                    #   closest_match - add alert to the cluster with the highest similarity (which must
                                    #                   be greater than the similarity threshold value). This option may
                                    #                   be less performant since it will have to compare alerts against
                                    #                   each cluster in a recipe.
                                    # (This will overwrite the definition in the cookbook)
                                    #
                                    cluster_match_type  : "first_match",

                                    matcher             :   {
                                                                initialise_function : "initBuckets",
                                                                member_function     : "checkBucket",
                                                                similarity          : 0.8
                                                            }
                                }
                        ],
                        #
                        # length of time (in seconds) to remember a cluster before
                        # a recipe forgets its existence and starts again.
                        #
                        cook_for          : 20000

                    }
                    ,
                    #
                    # AWS Cookbook configuration
                    #
                    {
                        # Moolet
                        name                : "AWS Cookbook",
                        classname           : "CCookbook",
                        run_on_startup      : true, 
                        persist_state       : false,
                        metric_path_moolet     : true,
                        moobot              : "Cookbook.js",
                        #process_output_of  : "AlertRulesEngine",
                        process_output_of   : "MaintenanceWindowManager",
                    
                        # Algorithm
                        membership_limit  : 1,
                        scale_by_severity : false,
                        entropy_threshold : 0.0,
                    
                        single_recipe_matching : false,
                        cluster_match_type  : "first_match",
                    
                        recipes :[
                                {
                                    chef                : "CValueRecipeV2",
                                    name                : "EC2_tags",
                                    description         : "Application $UNIQUE(custom_info.eventDetails.tags.application) has a problem $SERVICES(custom_info.eventDetails.tags.application)",
                                    recipe_alert_threshold : 1,
                                    exclusion           : null,
                                    trigger             : "severity > 3",
                                    seed_alert          : null,
                                    rate                : 0,   # Given in events per minute
                                    min_sample_size     : 5,
                                    max_sample_size     : 10,
                                    cook_for            : 900,
                                    cluster_match_type  : "first_match",
                                    matcher             :   {
                                                                components: [
                                                                                { name: "custom_info.eventDetails.tags.application", similarity: 1.0, shingle_size: 3}
                                                                ]
                                                            }
                                }
                        ],
                        cook_for          : 900
                    }
                    ,
                    #
                    # Sample Cookbook configuration for New Relic events
                    #
                    #{
                    #    # Moolet
                    #    name                : "New Relic Cookbook",
                    #    classname           : "CCookbook",
                    #    run_on_startup      : false,
                    #    persist_state       : false,
                    #    metric_path_moolet     : true,
                    #    moobot              : "Cookbook.js",
                    #    #process_output_of  : "AlertRulesEngine",
                    #    process_output_of   : "MaintenanceWindowManager",
                    #
                    #    # Algorithm
                    #    membership_limit  : 1,
                    #    scale_by_severity : false,
                    #    entropy_threshold : 0.8,
                    #
                    #    single_recipe_matching : false,
                    #    cluster_match_type  : "first_match",
                    #
                    #    recipes :[
                    #            {
                    #                chef                : "CValueRecipe",
                    #                name                : "New Relic Hostname Recipe",
                    #                description         : "Recipe to create situations based on 100% similarity of the hostname received from New Relic",
                    #                recipe_alert_threshold : 1,
                    #                exclusion           : null,
                    #                trigger             : null,
                    #                seed_alert          : null,
                    #                rate                : 0,   # Given in events per minute
                    #                min_sample_size     : 5,
                    #                max_sample_size     : 10,
                    #                cook_for           : 900,
                    #                matcher             :   {
                    #                                            components: [
                    #                                                            { name: "source_id", similarity: 1.0 }
                    #                                            ]
                    #                                        }
                    #            }
                    #    ],
                    #    cook_for          : 900
                    #}
                    #,
                    #
                    # ITNM Route Cause & Symptom Detection Cookbook & Recipe
                    #
                    #{
                    #    # Moolet
                    #    name                : "ITNM",
                    #    classname           : "CCookbook",
                    #    run_on_startup      : true,
                    #    persist_state       : false,
                    #    metric_path_moolet  : true,
                    #    moobot              : "Cookbook.js",
                    #    #process_output_of  : "AlertRulesEngine",
                    #    process_output_of   : "MaintenanceWindowManager",
                    #
                    #    # Algorithm
                    #    membership_limit  : 1,
                    #    scale_by_severity : false,
                    #    entropy_threshold : 0,
                    #    single_recipe_matching : false,
                    #    cluster_match_type  : "first_match",
                    #     
                    #    recipes : 
                    #    [
                    #            {
                    #                chef                          : "CValueRecipe",
                    #                name                          : "ITNM Route Cause & Symptom Detection",
                    #                description                   : "Root cause and Symptom alerts detected based on ITNM",
                    #                recipe_alert_threshold        : 1,
                    #                exclusion                     : "custom_info.nmosCauseType = 0",
                    #                trigger                       : "custom_info.suppressedSerial > 0",
                    #                seed_alert                    : null,
                    #                rate                          : 0,
                    #                min_sample_size               : 5,
                    #                max_sample_size               : 10,
                    #                cook_for                      : 1200,
                    #                matcher                       : {
                    #                                                    components:
                    #                                                    [
                    #                                                         { name: "custom_info.suppressedSerial", similarity: 1.0 }
                    #                                                    ]
                    #                                                }
                    #          }
                    #    ],
                    #    cook_for  :    1200
                    #}
                    #,
                    #
                    # Sample Cookbook configuration that uses the graph topology module
                    #
                    #{
                    #    # Moolet
                    #    name                : "GraphTopoCookbook",
                    #    classname           : "CCookbook",
                    #    run_on_startup      : true,
                    #    moobot              : "GraphTopoCookbook.js",
                    #    process_output_of   : "MaintenanceWindowManager",
                    #
                    #    # Algorithm
                    #    membership_limit    : 1,
                    #    scale_by_severity   : false,
                    #    entropy_threshold   : 0.0,
                    #
                    #    recipes :[
                    #            {
                    #                chef                   : "CBotRecipe",
                    #                name                   : "GraphTopoRecipe",
                    #                description            : "Graph topology recipe",
                    #                recipe_alert_threshold : 0,
                    #                trigger                : null,
                    #                exclusion              : "severity < 3",
                    #                rate                   : 1,    # Given in events per minute
                    #                rate_samples           : 5,    # How many events to use for trailing rate calc
                    #                matcher                : {
                    #                                             initialise_function : "initBuckets",           
                    #                                             member_function     : "calculateSimilarity",   # Calculate the similarity metric
                    #                                             use_in_recipe       : "useInRecipe",
                    #                                             can_start_cluster   : "canStartCluster",
                    #                                             similarity          : 0.3                      # Similarity threshold for clustering
                    #                                         }
                    #            }
                    #    ],
                    #    cook_for  :    1200
                    #}
                    #,
                    {
                        # Moolet
                        name                : "Feedback",
                        classname           : "com.moogsoft.farmd.moolet.feedback.CFeedback",
                        run_on_startup      : false,
                        process_output_of   : "MaintenanceWindowManager",

                        # Algorithm
                        membership_limit  : 1,
                        scale_by_severity : false,
                        entropy_threshold : 0.0,

                        single_matching : false,

                        #
                        # The following defines the input neurons in the net
                        # and which activities will prompt a reinforcement learning
                        # step, or a brain to be shot!
                        #
                        inputs          : [ "source","description","severity","manager" ],
                        learn_queues    : [ "manual_create","rated","merge_create","split_create","annotated","diagnosed","refined"],
                        unlearn_queues  : [ "rated","split" ],
                        rating_threshold: 3,

                        #
                        # When training a brain, how many negative alerts to
                        # train with positive hits
                        #
                        alert_pool_size : 100,

                        #
                        # Ok, brain configuration
                        #
                        
                        # The followings are the default values that do not need to be specified, 
                        # and in fact not recommended to change by customers
                        # neurons             : 7,           # number of hidden neurons is dynamically set
                        # layers              : 2,           # number of hidden layer is default to 1
                        # learning_rate       : 0.15,
                        # activation_func     : "Hyperbolic",
                        # epochs              : 500,
                        
                        #
                        # Match strategy can be "Best" (closest to 1) or "Min_Error" (closest to trained result)
                        # Match strategy can be omitted, in which case it is default to "Min_Error"
                        #
                        # match_strategy      : "Min_Error",
                                                
                        precision           : 92.0,          # % precision to train for
                        tolerance           : 0.3,           # % tolerance of error in match
                        exact_match         : false,

                        #
                        # And this parameter informs the feedback engine
                        # when to discard an inferred cluster as out of date
                        # It is measured in seconds, and after this time has elapsed
                        # clusters will repeat. < 0 value they last forever
                        #
                        window              : 60                         
                    }
                    ,
                    {
                        # Moolet
                        name              : "Speedbird",
                        classname         : "CSpeedbird",
                        run_on_startup    : false,
                        persist_state     : false,
                        metric_path_moolet  : true,
                        process_output_of   : "MaintenanceWindowManager",
                        description       : "Speedbird situation",

                        # Algorithm
                        time_compression  : true,
                        scale_by_severity : true,
                        entropy_threshold : 0.35,
                        #
                        # This value is used to adjust the trimming of initial clusters
                        # to remove any outlier members. If the value <0.0, no pruning is
                        # undertaken. At 0.0, members that are further than one standard deviation from
                        # mean distance to the centroid of the cluster are eliminated. At > 0.0
                        # the standard deviation is multiplied by sig_alert_horizon and then members
                        # farther than mean + sig_alert_horizon*std_dev distance from centroid are
                        # eliminated.
                        #
                        sig_alert_horizon    : 0.0,
                        #
                        # Components of the event used to create the vector
                        # used in KMeans calculation. Note, event time is ALWAYS
                        # included as the first component in the vector, so if
                        # A,B are chosen components, vector is (t,A,B) in calculation.
                        # This is important to remember when choosing metric.
                        #
                        components        : [ "source","source_id","description" ],
                        #
                        # Pre-partitioning partitions the events into seperate streams BEFORE clustering
                        # based upon the value of the selected component. Sigs generated with partitioning
                        # will each contain a single value for the component.
                        #
                        # Multiple values can be provided in a list in a custom_info field. To make multiple 
                        # pre-partitions using value in the list individually, set "treat_as : list",
                        # e.g. pre_partition   : { name: "custom_info.list_field_name", treat_as: "list" }
                        # The pre_partition value will be treated as a string if not specified.
                        #
                        pre_partition   : null,
                        #
                        # We can choose a single attribute as a singleton component, which splits
                        # the discovered sigs so that they only ever contain events with a unique value
                        # of the supplied attribute. In that way we force partition the situations by
                        # that component.
                        #
                        # NOTE: this differs from pre-partitioning in that the clusters are generated from
                        # the whole data set and only then partitioned based upon the selected component.
                        # This configuration parameter will generally result in a different set of Sigs being
                        # generated than would be produced using pre-partitioning. It is possible to configure
                        # both pre_partition and partition_by at the same time. The partition_by parameter will
                        # only have any effect if it is applied to a different component.
                        #
                        partition_by   : null,
                        #
                        # The metric tensor is used to calculate euclidean distance
                        # between the component vectors. Events are clustered when they are
                        # 'close' to each other (ie distance is small) in phase space.
                        # The metric weights the contributions to this distance, and controls
                        # the relative importance of components to similarity. Imagine you have a vector
                        # (A,B), with a metric (1,10). In this case values (a1,b1), and (a2,b2) require
                        # the values of b1,b2 to be relatively more similar than a1,a2 for the vectors to be
                        # considered 'close'. Note the metric needs to have one more component than the components
                        # vector as time is always included. In practice large values are required as the weighting
                        # effect varies as the square root.
                        #
                        metric            : {
                                                #
                                                # Default metric to compare two vectors
                                                #
                                                default    : [ 1,1,1,1],
                                                #
                                                # You can specify a field in the event to choose a different metric
                                                #
                                                categoryField: "agent",
                                                #
                                                # Metric to use if event has agent value "DBMON"/"NETMON"
                                                #
                                                "DBMON"     : [ 100,1,1000,1000000],
                                                "NETMON"    : [ 1,100000000,1,0]
                                            },
                        #
                        # Control the maximum number of characters in a string used to
                        # compute the vector components for KMeans. Effectively ignore
                        # characters after the cutoff.
                        #
                        string_len_cutoff : 64,
                        #
                        # spread_cutoff value will determine
                        # the maximum amount of fuzziness in a cluster
                        # to tolerate. The higher the value the more loosely
                        # correlated a cluster can be. A value of zero will
                        # cause no clusters to be generated.
                        #
                        spread_cutoff     : 10.0,
                        #
                        # Ignore case when comparing strings for K-Means distance.
                        #
                        ignore_case       : true,
                        #
                        # Number of iterations to run before selecting
                        # best set of situations. Note, this has a very
                        # large impact on CPU consumption.
                        #
                        iterations        : 5,
                        #
                        # Speedbird supports Lloyd, Kmpp, and Entropy
                        # based seeding, of which Kmpp is the most efficient
                        # but can miss some related correlations by forcing
                        # maximal cluster separation. Lloyd is random, and was
                        # the default setting in prior releases. Entropy picks
                        # the highest entropy events to seed clusters.
                        # Note the entropy seeding is not random, so iterations don't matter.
                        #
                        seeding           : "Kmpp",
                        #
                        # If true, any clusters containing a causal entropy alert are not
                        # pruned or removed prior to merging. The effect of this is likely to be
                        # a lot of singleton situations containing just a causal alert.
                        #
                        force_causal      : false,

                        # Triggers
                        sig_on_bucket     : true,
                        sig_interval      : 500,
                        max_backlog       : 1000000,

                        # Time Buckets
                        resolution        : 10,
                        window            : 180

                        # Set this to true to generate stats for each attempt to
                        # generate clusters. This is output at WARNING so that
                        # it is possible to generate a logfile primarily
                        # composed of stats.
                        #
                        # NOTE: The output from this option is quite verbose -
                        # it is designed to be used during the tuning phase.
                        #generate_stats    : false
                    }
                    ,
                    {
                        # Moolet
                        name              : "Nexus",
                        classname         : "CNexus",
                        run_on_startup    : false,
                        persist_state     : false,
                        metric_path_moolet   : true,
                        process_output_of   : "MaintenanceWindowManager",
                        description       : "Nexus situation",

                        # Algorithm
                        time_compression  : true,
                        scale_by_severity : false,
                        entropy_threshold : 0.25,
                        #
                        # This value is used to adjust the trimming of initial clusters
                        # to remove any outlier members. If the value <0.0, no pruning is
                        # undertaken. At 0.0, members that are further than one standard deviation from
                        # mean distance to the centroid of the cluster are eliminated. At > 0.0
                        # the standard deviation is multiplied by sig_alert_horizon and then members
                        # farther than mean + sig_alert_horizon*std_dev distance from centroid are
                        # eliminated.
                        #
                        sig_alert_horizon    : 0.0,
                        #
                        # Pre-partitioning partitions the events into seperate streams BEFORE clustering
                        # based upon the value of the selected component. Sigs generated with partitioning
                        # will each contain a single value for the component.
                        #
                        # Multiple values can be provided in a list in a custom_info field. To make multiple 
                        # pre-partitions using value in the list individually, set "treat_as : list",
                        # e.g. pre_partition   : { name: "custom_info.list_field_name", treat_as: "list" }
                        # The pre_partition value will be treated as a string if not specified.
                        #
                        pre_partition   : null,
                        #
                        # We can choose a single attribute as a singleton component, which splits
                        # the discovered sigs so that they only ever contain events with a unique value
                        # of the supplied attribute. In that way we force partition the situations by
                        # that component.
                        #
                        # NOTE: this differs from pre-partitioning in that the clusters are generated from
                        # the whole data set and only then partitioned based upon the selected component.
                        # This configuration parameter will generally result in a different set of Sigs being
                        # generated than would be produced using pre-partitioning. It is possible to configure
                        # both pre_partition and partition_by at the same time. The partition_by parameter will
                        # only have any effect if it is applied to a different component.
                        #
                        partition_by   : null,

                        # Properties unique to Nexus:

                        # Indicates whether Nexus should ignore events that do not belong within a
                        # defined topology.
                        ignore_disconnected : false,

                        #
                        # The metric tensor is used to calculate euclidean distance
                        # between the component vectors. Events are clustered when they are
                        # 'close' to each other (ie distance is small) in phase space.
                        # The metric weights the contributions to this distance, and controls
                        # the relative importance of components to similarity. Imagine you have a vector
                        # (A,B), with a metric (1,10). In this case values (a1,b1), and (a2,b2) require
                        # the values of b1,b2 to be relatively more similar than a1,a2 for the vectors to be
                        # considered 'close'. Note the metric needs to have one more component than the components
                        # vector as time is always included. In practice large values are required as the weighting
                        # effect varies as the square root.
                        #
                        metric            : {
                                                #
                                                # Default metric to compare two vectors - the first metric
                                                # will be applied to the event time, the second one to the
                                                # four distance co-ordinates of the event within the topology
                                                # graph. Modify these metrics to adjust the relative importance
                                                # of time and topology in cluster formation.
                                                #
                                                default    : [ 1,100,100,100,100]
                                                #
                                                # You can specify a field in the event to choose a different metric
                                                #
                                                #categoryField: "agent",
                                                #
                                                # Metric to use if event has agent value "DBMON"/"NETMON"
                                                #
                                                #"DBMON"     : [ 1,100,1,1000,1000000],
                                                #"NETMON"    : [ 1,1,100000000,1,0]
                                            },
                        #
                        # spread_cutoff value will determine
                        # the maximum amount of fuzziness in a cluster
                        # to tolerate. The higher the value the more loosely
                        # correlated a cluster can be. A value of zero will
                        # cause no clusters to be generated.
                        #
                        spread_cutoff     : 10.0,
                        #
                        # Number of iterations to run before selecting
                        # best set of situations. Note, this has a very
                        # large impact on CPU consumption.
                        #
                        iterations        : 5,
                        #
                        # Speedbird supports Lloyd, Kmpp, and Entropy
                        # based seeding, of which Kmpp is the most efficient
                        # but can miss some related correlations by forcing
                        # maximal cluster separation. Lloyd is random, and was
                        # the default setting in prior releases. Entropy picks
                        # the highest entropy events to seed clusters.
                        # Note the entropy seeding is not random, so iterations don't matter.
                        #
                        seeding           : "Kmpp",
                        #
                        # If true, any clusters containing a causal entropy alert are not
                        # pruned or removed prior to merging. The effect of this is likely to be
                        # a lot of singleton situations containing just a causal alert.
                        #
                        force_causal      : false,

                        # Triggers
                        sig_on_bucket     : false,
                        sig_interval      : 60,
                        max_backlog       : 1000000,

                        # Time Buckets
                        resolution        : 20,
                        window            : 60

                        # Set this to true to generate stats for each attempt to
                        # generate clusters. This is output at WARNING so that
                        # it is possible to generate a logfile primarily
                        # composed of stats.
                        #
                        # NOTE: The output from this option is quite verbose -
                        # it is designed to be used during the tuning phase.
                        #generate_stats    : false
                    }
                    ,
                    {
                        # This moolet listens for sigs/sig updates
                        # and using the SituationMgr moobot, processes
                        # updates and other fun
                        name              : "SituationMgr",
                        classname         : "CSituationMgr",
                        run_on_startup    : true,
                        persist_state       : false,
                        metric_path_moolet   : false,
                        moobot            : "SituationMgrLabeller.js",
                        # moobot            : "SituationMgr.js",
                        # Optional configuration for Netcool LAM
                        # moobot            : "SituationMgrNetcool.js",

                        #
                        # When set to true, listens to messages sent on the
                        # /sigs topic by any moolet running on a different
                        # farmd instance.  This option directly replaces
                        # standalone, which is now deprecated but preserved
                        # for backwards-compatibility.
                        #
                        mooms_event_handler  : false,
                        #
                        # Specifies which moolets' output should be processed.
                        # This only works on moolets running in the same
                        # moog_farmd instance and does not rely upon the /sigs
                        # topic.
                        #
                        process_output_of : [
                                                "Sigaliser",
                                                "Speedbird",
                                                "Default Cookbook",
                                                "AWS Cookbook" 
                                            ]
                    }
                    ,
                    {
                        name            : "Notifier",
                        classname       : "CNotifier",
                        run_on_startup  : false,
                        metric_path_moolet : false,
                        moobot          : "Notifier.js"
                    }
                    #
                    # An example of how to use the "EmptyMoolet" to integrate
                    # with external services such as ACME Services Inc
                    #,
                    #{
                        # This moolet listens for appropriate bot events
                        # and adds bespoke handling for ACME integration
                        # updates and other fun
                    #    name              : "ACMEIntegrator",
                    #    classname         : "CEmptyMoolet",
                    #    run_on_startup    : true,
                    #    persist_state     : false,
                    #    metric_path_moolet   : false,
                    #    moobot            : "ACMEIntegration.js",

                    #
                    # declare which event handlers the moolet implements
                    # SigStatus and NewThreadEntry are the only supported handler
                    #
                    #    event_handlers    : [
                    #                            "Comment",
                    #                            "Feedback",
                    #                            "Sig",
                    #                            "SigStatus",
                    #                            "SigUpdate",
                    #                            "Summary",
                    #                            "NewThreadEntry"
                    #                        ]
                    #}
                    #
                    # Another example of how to use CEmptyMoolet to catch alert
                    # lifecycle events
                    #,
                    #{
                    #    name              : "AlertMgr",
                    #    classname         : "CEmptyMoolet",
                    #    run_on_startup    : false,
                    #    persist_state     : false,
                    #    metric_path_moolet   : false,
                    #    moobot            : "AlertMgr.js",
                    #    standalone_moolet : true,

                        #
                        # Listens for alerts events (on the /alerts
                        # topics).
                        #
                    #    event_handlers    : [
                    #                            "AlertClose",
                    #                            "AlertUpdate",
                    #                            "Alert"
                    #                        ]
                    #}
                    #,
                    #{
                    #  name              : "Enricher",
                    #  classname         : "CEmptyMoolet",
                    #  run_on_startup    : true,
                    #  moobot            : "Enricher.js",
                    #  event_handlers    : []
                    #}
                    ,
                    {
                        #
                        # The Team Manager Moolet monitors changes to Situation
                        # data and if defined criteria are met, it creates
                        # Teams, assigns Situations to Teams or removes
                        # Situations from Teams.
                        #
                        # There must only be one Team Manager running per
                        # instance of Moogsoft AIOps.
                        #
                        name              : "TeamsMgr",
                        classname         : "CTeamsMgr",
                        run_on_startup    : true,
                        persist_state     : false,
                        metric_path_moolet: false,
                        moobot            : "TeamsMgr.js",
                        #
                        # Specifies the list of all the moolet that can change
                        # or create situations. Remove this section if the
                        # TeamsMgr is running in its own instance.
                        #
                        process_output_of : [
                                                "Sigaliser",
                                                "Speedbird",
                                                "Cookbook",
                                                "Default Cookbook",
                                                "Nexus",
                                                "SituationMgr"
                                            ]
                    }
                    ,
                    # The Scheduler is used to run scheduled jobs at regular
                    # intervals throughout the lifetime of moog_farmd. Only this
                    # moolet, which cannot subscribe to the MooMS bus and
                    # listen to events, is allowed to submit scheduled jobs.
                    #
                    # To start up successfully it must have the name and threads
                    # values set to "Scheduler" and 1 respectively.
                    {
                        name              : "Scheduler",
                        classname         : "CScheduler",
                        run_on_startup    : false,
                        persist_state     : false,
                        metric_path_moolet   : false,
                        moobot            : "Scheduling.js",
                        threads           : 1,
                        standalone_moolet : true
                    }
                    ,
                    {
                        name              :   "Housekeeper",
                        classname         :   "com.moogsoft.farmd.moolet.housekeeper.CHousekeeper",
                        run_on_startup    :   true,
                        persist_state     :   false,
                        metric_path_moolet:   false,
                        standalone_moolet :   true
                    }
                    ,
                    {
                        name              :   "Indexer",
                        classname         :   "com.moogsoft.farmd.moolet.indexer.CIndexer",
                        run_on_startup    :   true,
                        persist_state     :   false,
                        metric_path_moolet:   false,
                        standalone_moolet :   true,

                        # Set to false to disable private teams indexing.
                        enable_private_teams: false,

                        # Maximal full scan batch size
                        full_scan_batch_size: 1000,

                        # How many seconds to wait between batches (0 not to wait)
                        full_scan_wait: 0,

                        # When to run the full scan (HH:mm:ss) leave empty to disable full scan (HH:mm:ss)
                        full_scan_at: "02:12:35",

                        # Do we want to run full scan when the moolet starts?
                        full_scan_at_startup: false,

                        # Scan the historic data once every how many full scans
                        historic_scan_frequency: 3
                    }


                    #
                    #***********************************************************
                    #
                    #          ____            _           _     _
                    #         |  _ \ _ __ ___ | |__   __ _| |__ | | ___ 
                    #         | |_) | '__/ _ \| '_ \ / _` | '_ \| |/ _ \
                    #         |  __/| | | (_) | |_) | (_| | |_) | |  __/
                    #         |_|   |_|  \___/|_.__/ \__,_|_.__/|_|\___|
                    #                                                   
                    #      ____             _      ____                     
                    #     |  _ \ ___   ___ | |_   / ___|__ _ _   _ ___  ___ 
                    #     | |_) / _ \ / _ \| __| | |   / _` | | | / __|/ _ \
                    #     |  _ < (_) | (_) | |_  | |__| (_| | |_| \__ \  __/
                    #     |_| \_\___/ \___/ \__|  \____\__,_|\__,_|___/\___|
                    #
                    #
                    #***********************************************************
                    #
                    # AlertRootCause and SituationRootCause config follow the
                    # same format, with most being consistent with existing
                    # moolets e.g. name, classname, run_on_startup etc.
                    #
                    # PRC specific config outlined below:
                    #
                    #  inc_train_strategy : Governs the approach to training
                    #                 when a training example is received.
                    #                 ==0 => Always perfom INCREMENTAL TRAINING
                    #                  <0 => Always perfom a COMPLETE RETRAIN
                    #                   X (>0) => perform a FULL RETRAIN until
                    #                        training takes X milliseconds after
                    #                        wgich use incfemental training
                    #  load_model   : T/F, On start-up should a previously trained model be used
                    #  save_model   : T/F, Should the model be written to the DB after each training event
                    #
                    # active_features
                    # ===============
                    #  Which of the named features in the 'features' section
                    #  should the current model use.
                    #
                    # experimental
                    # ============
                    #  A set of parameters for the internals of the algorithms
                    #  or that may not be required in the final release
                    #
                    #  lambda       : Regularization parameter - DO NOT TOUCH
                    #  max_epochs   : How many 'iterations' to run during a full retrain
                    #
                    # features
                    # ========
                    #  The definitions for every feature that the model may need
                    #
                    #  name      : A human-readable name for the feature, all features are
                    #              identified by a name that must be unique within each instance of a PRC moolet
                    #  parameter : The parameter within an alert to extract and process, all parameters,
                    #              including custom_info can be used (custom_info.object.value).  The
                    #              same parameter can be used in multiple features using different interpretations
                    #              but each will require a unique name
                    # 
                    #  type & interpretation :
                    #              Used to tell the PRC algorithms how to understand this parameter.  'type' doesn't
                    #              need to be same as the type of the value in the alert but in most cases it
                    #              will be. This allows a numeric value to be treated as text.  Permitted values
                    #              are :
                    #                   type           : "number", "text"
                    #                   interpretation : "raw", "enumeration", "time", "ensemble"
                    #
                    #   'number' / 'raw' :
                    #   To be be used when numeric values lie on a *continuous* scale with 'good' values at the
                    #   opposite end of the scale to 'bad' values', e.g. CPU Utilisation. 
                    #
                    #   'number' / 'enumeration' :
                    #   For use when there is no relationship between different numeric values, such that the values
                    #   are just numeric labels, e.g. state, owner
                    #
                    #   A note on severity : Severity has a somewhat unique position in that it could be treated as
                    #   both a numeric enumeration i.e. 0 = 'Closed', 4 = 'Major', 5 = 'Critical' etc, by convention higher
                    #   numbers generally mean a worse severity which lend themselves well to a 'raw' interpretation.
                    #   Positive results have been observed using severity as both a 'raw' and 'enumerated' feature.
                    #
                    #   'number' / 'time' :
                    #   Some alert/situation parameters represent time fields, e.g. first_event_time etc.  It is assumed
                    #   that these parameters represent the seconds since epoch and are given special handling. The single
                    #   parameter is re-formulated into 4 components:
                    #    - absolute seconds since reference
                    #    - hours since reference
                    #    - minutes past the hour since reference
                    #    - seconds past the minute since reference
                    #   In the context of a situation, a reference time can be provided, otherwise 1st Jan 1970 is used.
                    #
                    #   'number' / 'ensemble' :
                    #   *** NOTE : Available for Situation PRC Only ***
                    #   Ensemble processing allows absolute values to be converted into relative measures in the context
                    #   of a situation...
                    #   Sometimes the features required to identify causal alerts do not exist explicitly in an alert record
                    #   but can be calculated.  The 'ensemble' feature provides some vey basic manipulation of an alert parameter
                    #   in the context of the situation in which those alerts appear. For example, it may be the alert with
                    #   the *highest* entropy that is most likely to be causal rather than the value of entropy explictly
                    #   alternatively the arrival order of the alerts may be the indicator of how causal an alert is i.e.
                    #   earlier = more important. In the latter example clearly a time based parameter is required
                    #   but 'time' as a feature (and described above) is not applicable in these cases because it is an
                    #   absolute measure and deals with explicit values of minutes/seconds rather than relative values.
                    #   Two algorithms are available for 'ordering' the parameter:
                    #       "processor" = "mad"         => Mean Absolute Deviation, a normalised value similar in concept
                    #                                      to standard deviation but more resilient to outliers,
                    #                                        0 => the median value
                    #                                       <0 => less than median
                    #                                       >0 => less than median
                    #       "processor" = "percentrank" => Percent Rank, 0-1 => relative value of the parameter in terms of
                    #                                      number of alerts with a similar or smaller value
                    #
                    #   'text' / 'raw' :
                    #   For free-form text fields e.g. description or where there are 'patterns' in the text that we
                    #   are trying to detect e.g. hostname, type
                    #
                    #   'text' / 'enumeration' :
                    #   For text fields where each value represents a different 'category' e.g. agent, class etc
                    #
                    #  'text' / 'time' :
                    #  *** NOTE: Not yet supported ***
                    #
                    #  'text' / 'ensemble' :
                    #  *** NOTE: Not yet supported ***
                    #
                    #  Defining Enumerations
                    #  ---------------------
                    #    source = range/learned/defined - further config needed for different types
                    #
                    #     range (numeric only) :
                    #       min, max    - The minimum and maximum values in a continuous range ( for severity min = 0, max = 5)
                    #
                    #     learned (text/numeric) :
                    #       size_hint   - how many values are expected?
                    #       initial_values (optional)  - A list of vlaues with which to prime the system
                    #
                    #       The system will learn upto <size_hint> values as alerts enter the system, if more than size_hint
                    #       values are observed then the next full retrain will automatically incorporate those new values
                    #       into the model
                    #
                    #     defined (text/numeric) :
                    #       values - A list of defined values that the system will look for, any other values will be ignored
                    #
                    #    ranking_param :
                    #      In addition to the value of the enumeration, specifying a ranking parameter adds an additional feature
                    #      that ranks the value of the enumeratoin by this variable and in the context of the situation.
                    #      E.g. ranking parameter = first_event_time identifies the first, last etc event with severity of
                    #      Minor, Major, Warning etc.
                    #
                    #  Defining Raw Parameters
                    #  -----------------------
                    #  Raw numeric/text types are defined differently
                    #
                    #    type = number :
                    #      no extra parameters
                    #
                    #    type = text :
                    #      tokenisation : ( "words" / "shingles" )
                    #        words      : Break the inbound text into a series of whitespace separated tokens, each token will
                    #                       map to a different 'feature' useful for multi-word, longer text fields such as description
                    #        shingles   : Break the inbound text into a series of 'n'-character shingles.  A shingle is a
                    #                       group of consecutive letters if the inbound string is "hello world", a shingle size
                    #                       of 4 would give the following shingles "hell", "ello", "llo ", "lo w", "o wo",
                    #                       " wor", "worl", "olrd".  This is useful for finding patterns in pseudo enumerated values
                    #                       and that follow a meaningful naming convention,  e.g. hostname, type
                    #      collation    : "hash" - required no other option as yet, more options to follow.
                    #      feature_size : To transform the different words or shingles found in text fieds we use something called
                    #                       the "hashtrick" this is used to collapse a variable number of words or shingles onto a
                    #                       fixed-size feature vector.  This number represents the size of that vector.
                    #                       A higher value => less chance of hash collisions but at a the cost of longer training
                    #                       time and more training examples required.
                    #                       Suggested initial values, for identifying naming conventions in say hosts feature_size = 32,
                    #                       for longer descriptionsm feature_size > 256.  The optimal values need to be determined.
                    #
                    #***********************************************************
                    #
                    ,{
                        name                : "AlertRootCause",
                        classname           : "com.moogsoft.farmd.moolet.rootcause.CAlertProbableRootCause",
                        threads             : 1, 
                        run_on_startup      : false,
                        metric_path_moolet  : false,
                        process_output_of   : [ "MaintenanceWindowManager" ],
                       #assigner_threads    : 5,
                        experimental        : {
                                                lambda          : 0.01,
                                                max_epochs      : 50
                                              },
                        inc_train_strategy  : 15000,
                        load_model          : false,
                        save_model          : true,
                        active_features     : [ "Severity Enum", "Severity Raw" ],
                        features            : [
                                                {
                                                    "name"               : "Agent",
                                                    "parameter"          : "agent",
                                                    "description"        : "The agent of the alert represented as an enumeration. Each value of 'agent' is considered to be independent from all other values.",
                                                    "type"               : "text",
                                                    "interpretation"     : "enumeration",
                                                    "enumeration"        :
                                                    {
                                                        "source"         : "learned",
                                                        "size_hint"      : 10
                                                    }
                                                },{
                                                    "name"               : "Alert Time",
                                                    "parameter"          : "first_event_time",
                                                    "description"        : "Represents the alert time as the components of the 'time of day' e.g. hours of day, minutes of hour.",
                                                    "type"               : "number",
                                                    "interpretation"     : "time"
                                                },{
                                                    "name"               : "Class",
                                                    "parameter"          : "class",
                                                    "description"        : "The class of the alert, represented in a way that identifies naming conventions with the class name.",
                                                    "type"               : "text",
                                                    "interpretation"     : "raw",
                                                    "raw"                :
                                                    {
                                                        "tokenisation"   : "shingles",
                                                        "shingle_size"   : 2,
                                                        "collation"      : "hash",
                                                        "feature_size"   : 24
                                                    }
                                                },{
                                                    "name"               : "Description",
                                                    "parameter"          : "description",
                                                    "description"        : "Tokenizes the description into words and uses those words to identify key words and phrases that may indicate root cause.",
                                                    "type"               : "text",
                                                    "interpretation"     : "raw",
                                                    "raw"                :
                                                    {
                                                        "tokenisation"   : "words",
                                                        "collation"      : "hash",
                                                        "feature_size"   : 256
                                                    }
                                                },{
                                                    "name"               : "Host",
                                                    "parameter"          : "source",
                                                    "description"        : "The host of the alert, represented in a way that identifies naming conventions in the class name.",
                                                    "type"               : "text",
                                                    "interpretation"     : "raw",
                                                    "raw"                :
                                                    {
                                                        "tokenisation"   : "shingles",
                                                        "shingle_size"   : 2,
                                                        "collation"      : "hash",
                                                        "feature_size"   : 32
                                                    }
                                                },{
                                                    "name"               : "Manager",
                                                    "parameter"          : "manager",
                                                    "description"        : "The manager of the alert represented as an enumeration. Each value of 'manager' is considered to be independent from all other values.",
                                                    "type"               : "text",
                                                    "interpretation"     : "enumeration",
                                                    "enumeration"        :
                                                    {
                                                        "source"         : "learned",
                                                        "size_hint"      : 10
                                                    }
                                                },{
                                                    "name"               : "Severity Enum",
                                                    "parameter"          : "severity",
                                                    "description"        : "The severity of the alert represented as independent values. For best results use in conjunction with 'Severity Raw'.",
                                                    "type"               : "number",
                                                    "interpretation"     : "enumeration",
                                                    "enumeration"        :
                                                    {
                                                        # enums defined as an explicit set of values
                                                        "source"         : "defined",
                                                        "values"         : [ 0, 1, 2, 3, 4, 5 ]
                                                    }
                                                },{
                                                    "name"               : "Severity Raw",
                                                    "parameter"          : "severity",
                                                    "description"        : "The severity of the alert represented as a continuous value such that 'Warning' < 'Major' < 'Critical'. For best results use in conjunction with 'Severity Enum'.",
                                                    "type"               : "number",
                                                    "interpretation"     : "raw"
                                                },{
                                                    "name"               : "Type",
                                                    "parameter"          : "type",
                                                    "description"        : "The type of the alert, represented in a way that identifies naming conventions.",
                                                    "type"               : "text",
                                                    "interpretation"     : "raw",
                                                    "raw"                :
                                                    {
                                                        "tokenisation"   : "shingles",
                                                        "shingle_size"   : 2,
                                                        "collation"      : "hash",
                                                        "feature_size"   : 32
                                                    }
                                                }
                                            ]
                    },{
                        name                : "SituationRootCause",
                        classname           : "com.moogsoft.farmd.moolet.rootcause.CSituationProbableRootCause",
                        run_on_startup      : true,
                        threads             : 1,
                        metric_path_moolet  : false,
                        process_output_of   : [ "Default Cookbook" ],
                       #process_output_of   : [ "Sigaliser", "Speedbird", "Nexus", "Cookbook", "Default Cookbook"],
                       #assigner_threads    : 5,
                        experimental        : {
                                                lambda          : 0.01,
                                                max_epochs      : 50
                                              },
                        inc_train_strategy  : 15000,
                        load_model          : true,
                        save_model          : true,
                        active_features     : [ "Description", "Host" ],
                        features            : [
                                                {
                                                    "name"               : "Agent",
                                                    "parameter"          : "agent",
                                                    "description"        : "The agent of the alert represented as an enumeration. Each value of 'agent' is considered to be independent from all other values.",
                                                    "type"               : "text",
                                                    "interpretation"     : "enumeration",
                                                    "enumeration"        :
                                                    {
                                                        "source"         : "learned",
                                                        "size_hint"      : 10
                                                    }
                                                },{
                                                    "name"               : "Alert Arrival Order",
                                                    "parameter"          : "first_event_time",
                                                    "description"        : "Represents the arrival order of the alert in a situation.",
                                                    "type"               : "number",
                                                    "interpretation"     : "ensemble",
                                                    "ensemble"           :
                                                    {
                                                        "processor"      : "mad"
                                                    }
                                                },{
                                                    "name"               : "Alert Time",
                                                    "parameter"          : "first_event_time",
                                                    "description"        : "Represents the alert time as the components of the 'time of day' e.g. hours of day, minutes of hour.",
                                                    "type"               : "number",
                                                    "interpretation"     : "time"
                                                },{
                                                    "name"               : "Class",
                                                    "parameter"          : "class",
                                                    "description"        : "The class of the alert, represented in a way that identifies naming conventions in the class name.",
                                                    "type"               : "text",
                                                    "interpretation"     : "raw",
                                                    "raw"                :
                                                    {
                                                        "tokenisation"   : "shingles",
                                                        "shingle_size"   : 2,
                                                        "collation"      : "hash",
                                                        "feature_size"   : 24
                                                    }
                                                },{
                                                    "name"               : "Description",
                                                    "parameter"          : "description",
                                                    "description"        : "Tokenizes the description into words and uses those words to identify key words and phrases that may indicate root cause.",
                                                    "type"               : "text",
                                                    "interpretation"     : "raw",
                                                    "raw"                :
                                                    {
                                                        "tokenisation"   : "words",
                                                        "collation"      : "hash",
                                                        "feature_size"   : 256
                                                    }
                                                },{
                                                    "name"               : "Host",
                                                    "parameter"          : "source",
                                                    "description"        : "The host of the alert, represented in a way that identifies naming conventions in the class name.",
                                                    "type"               : "text",
                                                    "interpretation"     : "raw",
                                                    "raw"                :
                                                    {
                                                        "tokenisation"   : "shingles",
                                                        "shingle_size"   : 2,
                                                        "collation"      : "hash",
                                                        "feature_size"   : 32
                                                    }
                                                },{
                                                    "name"               : "Manager",
                                                    "parameter"          : "manager",
                                                    "description"        : "The manager of the alert represented as an enumeration. Each value of 'manager' is considered to be independent from all other values.",
                                                    "type"               : "text",
                                                    "interpretation"     : "enumeration",
                                                    "enumeration"        :
                                                    {
                                                        "source"         : "learned",
                                                        "size_hint"      : 10
                                                    }
                                                },{
                                                    "name"               : "Severity & Arrival Order",
                                                    "parameter"          : "severity",
                                                    "description"        : "The severity of the alert represented as independent values and when the alert arrived for each value of severity. For best results use in conjunction with 'Severity Raw'.",
                                                    "type"               : "number",
                                                    "interpretation"     : "enumeration",
                                                    "enumeration"        :
                                                    {
                                                        # enum defined as a numerical range
                                                        "source"            : "range",
                                                        "min"               : 0,
                                                        "max"               : 5,
                                                        "ranking_param"     : "first_event_time"
                                                    }
                                                },{
                                                    "name"               : "Severity Enum",
                                                    "parameter"          : "severity",
                                                    "description"        : "The severity of the alert represented as independent values. For best results use in conjunction with 'Severity Raw'.",
                                                    "type"               : "number",
                                                    "interpretation"     : "enumeration",
                                                    "enumeration"        :
                                                    {
                                                        # enums defined as an explicit set of values
                                                        "source"         : "defined",
                                                        "values"         : [ 0, 1, 2, 3, 4, 5 ]
                                                    }
                                                },{
                                                    "name"               : "Severity Raw",
                                                    "parameter"          : "severity",
                                                    "description"        : "The severity of the alert represented as a continuous value such that 'Warning' < 'Major' < 'Critical'. For best results use in conjunction with 'Severity Enum' or 'Severity & Arrival Order'.",

                                                    "type"               : "number",
                                                    "interpretation"     : "raw"
                                                },{
                                                    "name"               : "Situation Alert Time",
                                                    "parameter"          : "first_event_time",
                                                    "description"        : "Represents the alert time as the components of time e.g. hours of day, minutes of hour but relative the first event in the situation.",
                                                    "type"               : "number",
                                                    "interpretation"     : "time",
                                                    "time"               :
                                                    {
                                                        "reference"      : "first_event_time"
                                                    }
                                                },{
                                                    "name"               : "Type",
                                                    "parameter"          : "type",
                                                    "description"        : "The type of the alert, represented in a way that identifies naming conventions.",
                                                    "type"               : "text",
                                                    "interpretation"     : "raw",
                                                    "raw"                :
                                                    {
                                                        "tokenisation"   : "shingles",
                                                        "shingle_size"   : 2,
                                                        "collation"      : "hash",
                                                        "feature_size"   : 32
                                                    }
                                                }
                                            ]
                    }
                ]
        #
        # Uncomment to change the ha definitions
        #,
        #ha:
        #{
        #    cluster: "MOO",
        #    group: "moog_farmd",
        #    instance: "instance_name",
        #    default_leader: true
        #}
    }

}
